@use "../../scss/mixins.scss" as *;
@use "../../scss/colors.scss" as *;

.select {
    position: relative;
    min-width: toRem(150);
    width: 100%;

    &._open {
    }

    &--disabled & {
    }

    &__btn {
        all: unset;
        box-sizing: border-box;
        appearance: none;
        background: none;
        border: none;
        margin: 0;
        padding: 0;
        font: inherit;
        color: inherit;
        cursor: pointer;
        outline: none;

        width: 100%;
        min-height: toRem(52);
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: toRem(16) toRem(12);
        border-radius: toRem(4);
        border: 1px solid rgba(0, 0, 0, 0.23);
        transition: border-color 0.3s;
        background-color: white;

        &:focus {
            border-color: $primary;
        }

        @media (any-hover: hover) {
            .select:not(.select--disabled) &:hover {
                border-color: #000;
            }
        }

        ._open & {
            border-color: $primary !important;
            color: $primary;
        }

        .select--disabled & {
            cursor: default;
            opacity: 0.5;
        }
    }

    &__chevron {
        position: absolute;
        right: toRem(12);
        top: 50%;
        transform: translateY(-50%);
        transition: transform 0.3s;
        pointer-events: none;

        ._open & {
            transform: translateY(-50%) rotate(-180deg);
        }
    }

    &__label {
        position: absolute;
        left: toRem(12);
        top: 50%;
        transform: translateY(-50%);
        transform-origin: left top;
        transition: all 0.2s cubic-bezier(0, 0, 0.2, 1);
        pointer-events: none;
        color: rgba(0, 0, 0, 0.6);
        background-color: white;
        padding: 0 toRem(4);
        max-width: calc(100% - #{toRem(24)});

        &--active {
            top: 0;
            transform: translateY(-50%) scale(0.75);
            color: $primary;
        }
    }

    &__selected-value {
        // padding-top: toRem(16);
        opacity: 0;
        transition: opacity 0.2s;

        &:not(:empty) {
            opacity: 1;
        }
    }

    &__dropdown {
        all: unset;
        list-style: none;
        margin: 0;
        padding: 0;

        position: absolute;
        top: calc(100% + toRem(8));
        left: 0;
        width: 100%;
        overflow-y: auto;
        background-color: white;
        border-radius: toRem(4);
        box-shadow:
            0 3px 14px 2px rgba(0, 0, 0, 0.12),
            0 8px 10px 1px rgba(0, 0, 0, 0.14),
            0 5px 5px -3px rgba(0, 0, 0, 0.2);
        z-index: 10;

        opacity: 0;
        visibility: hidden;
        transform: translateY(-5px);
        transition:
            opacity 0.3s ease,
            transform 0.3s ease,
            visibility 0.3s ease;

        ._open & {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }
    }
}

.select-item {
    all: unset;
    margin: 0;
    padding: toRem(6) toRem(16);
    display: flex;
    align-items: center;
    gap: toRem(8);
    cursor: pointer;
    transition: background-color 0.2s;

    box-sizing: border-box;
    width: 100%;
    outline: none;

    &:focus {
        background-color: rgba(0, 0, 0, 0.08);
        box-shadow: inset 0 0 0 2px $primary;
    }

    &:hover {
        background-color: rgba(0, 0, 0, 0.04);
    }

    &--selected {
        background-color: rgba(25, 118, 210, 0.08);
        color: $primary;
    }

    &--disabled {
        opacity: 0.5;
        cursor: default;
        pointer-events: none;
    }

    &__icon {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    &__label {
        flex: 1;
    }
}
